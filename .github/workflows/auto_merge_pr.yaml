name: PR
on:
  pull_request:
    types: [opened, synchronize, review_request_removed]

jobs:
  ci:
    name: CI
    runs-on: ubuntu-latest
    steps:
      - run: exit 0

  merge-pr:
    name: Merge PR
    # Only attempt to merge the PR if CI has passed
    needs: ci
    runs-on: ubuntu-latest
    steps:
      - uses: actions/github-script@0.2.0
        with:
          github-token: ${{github.token}}
          script: |
            github.pulls.get({owner: context.repo.owner, repo: context.repo.repo, pull_number: context.payload.number})
              .then(pr => {
                // https://developer.github.com/v4/enum/mergestatestatus/
                if (pr.data.mergeable_state == "clean") {
                  github.pulls.merge({owner: context.repo.owner, repo: context.repo.repo, pull_number: context.payload.number});
                } else {
                  console.log(`
                  This PR is not in a mergeable state!
                  Current state: '${pr.data.mergeable_state}'
                  See https://developer.github.com/v4/enum/mergestatestatus/ for more details.
                  `)
                  process.exit(1)
                }
              }
            )

  delete-branch:
    name: Delete Branch
    # Only attempt to delete the branch if the PR has been merged
    needs: merge-pr
    runs-on: ubuntu-latest
    steps:
      - uses: actions/github-script@0.2.0
        with:
          github-token: ${{github.token}}
          script: |
            github.pulls.get({owner: context.repo.owner, repo: context.repo.repo, pull_number: context.payload.number})
            .then(pr => {
              github.git.deleteRef({owner: context.repo.owner, repo: context.repo.repo, ref: `heads/${pr.data.head.ref}`});
            });
