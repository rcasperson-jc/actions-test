name: Auto-merge PR

# NOTE: The check_suite trigger doesn't work after it is rerun
# after the branch is automatically updated
# https://github.community/t5/GitHub-Actions/Check-Suite-created-by-a-Workflow-doesn-t-complete-even-though/td-p/33390
on:
  pull_request_review:
  check_suite:
    types: [completed]

jobs:
  merge-pr:
    name: Merge PR
    runs-on: ubuntu-latest
    steps:
      - uses: actions/github-script@0.2.0
        with:
          github-token: ${{github.token}}
          script: |
            const owner = context.repo.owner;
            const repo = context.repo.repo;

            let pull_number;
            if (context.payload.pull_request) {
              pull_number = context.payload.pull_request.number;
            } else if (context.payload.check_suite) {
              let prs = context.payload.check_suite.pull_requests;
              if (prs.length == 0) {
                console.log("No PRs attached to check_suite, so no PRs to merge");
                process.exit(1);
              };
              pull_number = context.payload.check_suite.pull_requests[0].number;
            };

            github.pulls.get({owner, repo, pull_number})
              .then(pr => {
                // https://developer.github.com/v4/enum/mergestatestatus/
                if (pr.data.mergeable_state == "clean") {
                  github.pulls.merge({owner, repo, pull_number});
                } else {
                  console.log(`
                  PR #${pull_number} is not in a mergeable state!
                  Current state: '${pr.data.mergeable_state}'
                  See https://developer.github.com/v4/enum/mergestatestatus/ for more details.
                  `)
                  process.exit(1)
                }
              }
            )

  delete-branch:
    name: Delete Branch
    # Only attempt to delete the branch if the PR has been merged
    needs: merge-pr
    runs-on: ubuntu-latest
    steps:
      - uses: actions/github-script@0.2.0
        with:
          github-token: ${{github.token}}
          script: |
            const owner = context.repo.owner;
            const repo = context.repo.repo;

            let pull_number;
            if (context.payload.pull_request) {
              pull_number = context.payload.pull_request.number;
            } else if (context.payload.check_suite) {
              let prs = context.payload.check_suite.pull_requests;
              if (prs.length == 0) {
                console.log("No PRs attached to check_suite, so no PRs to merge");
                process.exit(1);
              };
              pull_number = context.payload.check_suite.pull_requests[0].number;
            };

             github.pulls.get({owner, repo, pull_number})
            .then(pr => {
              const ref = `heads/${pr.data.head.ref}`;
              github.git.deleteRef({owner, repo, ref});
            });

  update-prs:
    name: Update PR Branches
    # Update other PRs after a PR merges
    needs: merge-pr
    runs-on: ubuntu-latest
    steps:
      - uses: actions/github-script@0.2.0
        with:
          github-token: ${{github.token}}
          script: |
            const whitelistLabel = "auto-update";
            const owner = context.repo.owner;
            const repo = context.repo.repo;

            github.pulls.list({owner, repo})
            .then(res => {
              const prs = res.data;
              for (const pr of prs) {
                const pull_number = pr.number;
                const prLabelNames = pr.labels.map(label => label.name);
                if (prLabelNames.includes(whitelistLabel)) {
                  if (pr.mergeable_state == "behind") {
                    console.log(`Updating PR #${pull_number}`);
                    github.pulls.updateBranch({owner, repo, pull_number});
                  } else {
                    console.log(`Skipping PR #${pull_number} since it is not out of date. Current PR state: '${pr.mergeable_state}'`);
                  }
                } else {
                  // This relies on the mergeable_state value of "behind" overriding
                  // all other states. I am sure that it shows if a PR is both "behind" and "blocked",
                  // but I am not certain other states will override it.
                  console.log(`Skipping PR #${pull_number} since it does not have the '${whitelistLabel}' tag. Current PR state: '${pr.mergeable_state}'`);
                }
              }
            })
