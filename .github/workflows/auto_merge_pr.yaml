name: Auto-merge PR
on:
  pull_request:
    types: [opened, reopened]

jobs:
  merge-pr:
    name: Merge PR
    runs-on: ubuntu-latest
    steps:
      - uses: actions/github-script@0.2.0
        with:
          github-token: ${{github.token}}
          script: |
            const owner = context.repo.owner;
            const repo = context.repo.repo;
            const pullNumber = context.payload.number;

            setTimeout(() => {
              github.pulls.get({owner: owner, repo: repo, pull_number: pullNumber})
                .then(pr => {
                  // https://developer.github.com/v4/enum/mergestatestatus/
                  // "unstable" is OK because it means that this check hasn't finished,
                  // which of course is expected.
                  if (["clean", "unstable"].includes(pr.data.mergeable_state)) {
                    github.pulls.merge({owner: owner, repo: repo, pull_number: pullNumber});
                  } else {
                    console.log(`
                    This PR is not in a mergeable state!
                    Current state: '${pr.data.mergeable_state}'
                    See https://developer.github.com/v4/enum/mergestatestatus/ for more details.
                    `)
                  }
                }
              )
            }, 30 * 1000);

  delete-branch:
    name: Delete Branch
    # Only attempt to delete the branch if the PR has been merged
    needs: merge-pr
    runs-on: ubuntu-latest
    steps:
      - uses: actions/github-script@0.2.0
        with:
          github-token: ${{github.token}}
          script: |
            github.pulls.get({owner: context.repo.owner, repo: context.repo.repo, pull_number: context.payload.number})
            .then(pr => {
              github.git.deleteRef({owner: context.repo.owner, repo: context.repo.repo, ref: `heads/${pr.data.head.ref}`});
            });
